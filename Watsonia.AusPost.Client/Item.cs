using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Watsonia.AusPost.Client
{
	/// <summary>
	/// An item element to be supplied for each parcel.
	/// </summary>
	/// <seealso cref="Watsonia.AusPost.Client.ApiItem" />
	public sealed class Item : ApiItem
	{
		/// <summary>
		/// The identifier for the item previously generated by Australia Post during a Create Shipments API call. You specify this field to make changes to an existing item. If you don't specify this field, then a new item is created and added to the shipment.
		/// </summary>
		/// <value>
		/// The item identifier.
		/// </value>
		[StringLength(50)]
		public string ItemID { get; set; }

		/// <summary>
		/// A unique reference for the item, generated by the merchant. This value must be unique across all items for the charge account. 
		/// </summary>
		/// <value>
		/// The item reference.
		/// </value>
		[StringLength(50)]
		public string ItemReference { get; set; }

		/// <summary>
		/// The Australia Post code representing the postage product for the item.
		/// </summary>
		/// <value>
		/// The product identifier.
		/// </value>
		[Required]
		[StringLength(5)]
		public string ProductID { get; set; }

		/// <summary>
		/// A description of the item, generated by the merchant. It is mandatory for New Zealand Commercial products and is used to capture the overall description of the article.
		/// </summary>
		/// <value>
		/// The item description.
		/// </value>
		public string ItemDescription { get; set; }

		/// <summary>
		/// The length of the parcel in centimetres. If volumetric pricing applies then this is mandatory. Alternatively, you can use the CubicVolume field. You cannot specify both Length/Width/Height and CubicVolume.
		/// </summary>
		/// <value>
		/// The length.
		/// </value>
		public decimal? Length { get; set; }

		/// <summary>
		/// The width of the parcel in centimetres. If volumetric pricing applies then this is mandatory. Please refer to the length field for more information.
		/// </summary>
		/// <value>
		/// The width.
		/// </value>
		public decimal? Width { get; set; }

		/// <summary>
		/// The height of the parcel in centimetres. If volumetric pricing applies then this is mandatory. Please refer to the length field for more information.
		/// </summary>
		/// <value>
		/// The height.
		/// </value>
		public decimal? Height { get; set; }

		/// <summary>
		/// The volume of the item in cubic metres. If volumetric pricing applies, then volume is mandatory. To specify volume, you can use the CubicVolume field or the Length/Width/Height fields, but not both. Note that the CubicVolume field is only available for StarTrack products.
		/// </summary>
		/// <value>
		/// The cubic volume.
		/// </value>
		public decimal? CubicVolume { get; set; }

		/// <summary>
		/// The parcel's weight in kilograms. This must not be specified for flat-rate return shipments (MovementType = RETURN). However, it is mandatory for normal (outbound) shipments (MovementType = DESPATCH) and zonal returns (MovementType = RETURN). Your contract with Australia Post (not your API call) determines whether a return shipment has zonal pricing or flat-rate pricing. Note that most returns contracts are flat-rate.
		/// </summary>
		/// <value>
		/// The weight.
		/// </value>
		[Required]
		public decimal? Weight { get; set; }

		/// <summary>
		/// Whether the item contains dangerous goods, generated by the merchant.
		/// </summary>
		/// <value>
		/// The contains dangerous goods.
		/// </value>
		public bool? ContainsDangerousGoods { get; set; }

		/// <summary>
		/// Whether the item can be left in a safe place on delivery without receiving a signature. This is optional for domestic shipments (and defaults to true), but must not be specified for international shipments. This field works with the SafeDropEnabled field. Please review the fact sheet for full details.
		/// </summary>
		/// <value>
		/// The authority to leave.
		/// </value>
		public bool? AuthorityToLeave { get; set; }

		/// <summary>
		/// Whether your customer can request that the item be left in a safe place at the delivery address if they are not home to sign for their delivery. Your customer can request this while the item is on its way. This field is optional for domestic shipments (and defaults to true), but must not be specified for international shipments. This field works with the AuthorityToLeave field. If the AuthorityToLeave field is set to true, the SafeDropEnabled field is ignored. Please review the fact sheet for full details.
		/// </summary>
		/// <value>
		/// The safe drop enabled.
		/// </value>
		public bool? SafeDropEnabled { get; set; }

		/// <summary>
		/// Use this field to note the reason the item is being returned. This field is only valid for RETURNS.
		/// </summary>
		/// <value>
		/// The reason for return.
		/// </value>
		public string ReasonForReturn { get; set; }

		/// <summary>
		/// Whether items can be delivered to their final destination as they become available or whether all items in the resulting consignment must be delivered together.
		/// </summary>
		/// <value>
		/// The allow partial delivery.
		/// </value>
		public bool? AllowPartialDelivery { get; set; }

		/// <summary>
		/// The packaging type for this item. Some example values are: CTN, PAL, SAT, BAG, ENV, ITM, JIF, SKI.
		/// </summary>
		/// <remarks>
		/// Note, for StarTrack products, the packaging type (refereed to as a unit type by StarTrack) is mandatory and has a maximum length of 3. 
		/// </remarks>
		/// <value>
		/// The type of the packaging.
		/// </value>
		[StringLength(3)]
		public string PackagingType { get; set; }

		/// <summary>
		/// Authority to Leave (ATL) authorisation code. If this field is provided, it must begin with C and be followed by a 9 digit number. 
		/// </summary>
		/// <value>
		/// The authority to leave number.
		/// </value>
		[StringLength(10)]
		[JsonProperty("atl_number")]
		public string AuthorityToLeaveNumber { get; set; }

		/// <summary>
		/// Additional features for the item.
		/// </summary>
		/// <value>
		/// The features.
		/// </value>
		public Dictionary<string, ItemFeature> Features { get; set; } = new Dictionary<string, ItemFeature>();

		/// <summary>
		/// Whether the item has commercial value (i.e. the goods are for resale). This is generated by the merchant and will be shown on the customers form and label.
		/// </summary>
		/// <value>
		/// The commercial value.
		/// </value>
		public bool? CommercialValue { get; set; }

		/// <summary>
		/// Export declaration number (EDN), generated by the merchant. This field is mandatory for item contents worth more than AUD$2000.
		/// </summary>
		/// <value>
		/// The export declaration number.
		/// </value>
		[StringLength(12, MinimumLength = 9)]
		public string ExportDeclarationNumber { get; set; }

		/// <summary>
		/// Receiver's reference number. The merchant can use this field to provide information to the receiver as it is printed on the label.
		/// </summary>
		/// <value>
		/// The import reference number.
		/// </value>
		[StringLength(40)]
		public string ImportReferenceNumber { get; set; }

		/// <summary>
		/// Category or classification of the goods. If CommercialValue is true, then this field must be set to "OTHER", otherwise it must be set to "GIFT", "SAMPLE", "DOCUMENT", "RETURN" or "SALE_OF_GOODS".
		/// </summary>
		/// <value>
		/// The type of the classification.
		/// </value>
		public ClassificationType? ClassificationType { get; set; }

		/// <summary>
		/// Description of the goods. This is mandatory if ClassificationType is "OTHER".
		/// </summary>
		/// <value>
		/// The description of other.
		/// </value>
		public string DescriptionOfOther { get; set; }

		/// <summary>
		/// If this field is supplied, it is printed on the label in the 'Signature of Sender' section along with today's date.
		/// </summary>
		/// <value>
		/// The name of the international parcel sender.
		/// </value>
		[StringLength(30)]
		public string InternationalParcelSenderName { get; set; }

		/// <summary>
		/// Your desired action if the delivery cannot be completed. You can specify "RETURN" or "ABANDONED". The default if not specified is to return the item by the most economical route or by air.
		/// </summary>
		/// <value>
		/// The non delivery action.
		/// </value>
		public NonDeliveryAction? NonDeliveryAction { get; set; }

		/// <summary>
		/// If you are supplying certificates with your customs forms, you can include the certificate numbers in this field.
		/// </summary>
		/// <value>
		/// The certificate number.
		/// </value>
		[StringLength(35)]
		public string CertificateNumber { get; set; }

		/// <summary>
		/// If you are supplying licence information with your customs forms, you can include the licence numbers in this field.
		/// </summary>
		/// <value>
		/// The licence number.
		/// </value>
		[StringLength(35)]
		public string LicenceNumber { get; set; }

		/// <summary>
		/// Use this field to include an invoice number on the label.
		/// </summary>
		/// <value>
		/// The licence number.
		/// </value>
		[StringLength(35)]
		public string InvoiceNumber { get; set; }
		
		/// <summary>
		/// Use this field to include any additional comments on the label.
		/// </summary>
		/// <value>
		/// The comments.
		/// </value>
		[StringLength(120)]
		public string Comments { get; set; }

		/// <summary>
		/// An ItemContents element describes part of the contents of the item. You can specify up to 20 elements in this array.
		/// </summary>
		/// <value>
		/// The item contents.
		/// </value>
		public List<ItemContents> ItemContents { get; set; } = new List<ItemContents>();

		/// <summary>
		/// Loads a Item from a JSON string.
		/// </summary>
		/// <param name="json">The json.</param>
		public static Item FromJson(string json)
		{
			var serializer = new ApiSerializer();
			return serializer.FromJson<Item>(json);
		}
	}
}
