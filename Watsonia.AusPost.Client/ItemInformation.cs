using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Watsonia.AusPost.Client
{
	public sealed class ItemInformation : ApiItem
	{
		/// <summary>
		/// The identifier for the item generated by Australia Post.
		/// </summary>
		/// <value>
		/// The item identifier.
		/// </value>
		[StringLength(50)]
		public string ItemID { get; set; }

		/// <summary>
		/// A unique reference for the item, generated by the merchant. This value must be unique across all items for the charge account. 
		/// </summary>
		/// <value>
		/// The item reference.
		/// </value>
		[StringLength(50)]
		public string ItemReference { get; set; }

		/// <summary>
		/// The Australia Post code representing the postage product for the item.
		/// </summary>
		/// <value>
		/// The product identifier.
		/// </value>
		[StringLength(5)]
		public string ProductID { get; set; }

		/// <summary>
		/// The unique identifiers for the item. If these values have not been provided when creating the order or labels, then they will have been generated by Australia Post. 
		/// </summary>
		/// <value>
		/// The tracking details.
		/// </value>
		public ItemTrackingDetails TrackingDetails { get; set; } = new ItemTrackingDetails();

		/// <summary>
		/// Summary pricing information for each item in the shipment.
		/// </summary>
		/// <value>
		/// The item summary.
		/// </value>
		public ItemSummary ItemSummary { get; set; } = new ItemSummary();

		public ItemLabel Label { get; set; } = new ItemLabel();

		/// <summary>
		/// A description of the item, generated by the merchant.
		/// </summary>
		/// <value>
		/// The item description.
		/// </value>
		public string ItemDescription { get; set; }

		/// <summary>
		/// The length of the parcel in centimetres. If volumetric pricing applied then this is mandatory. 
		/// </summary>
		/// <value>
		/// The length.
		/// </value>
		public decimal Length { get; set; }

		/// <summary>
		/// The width of the parcel in centimetres. If volumetric pricing applied then this is mandatory. 
		/// </summary>
		/// <value>
		/// The width.
		/// </value>
		public decimal Width { get; set; }

		/// <summary>
		/// The height of the parcel in centimetres. If volumetric pricing applied then this is mandatory. 
		/// </summary>
		/// <value>
		/// The height.
		/// </value>
		public decimal Height { get; set; }

		/// <summary>
		/// The parcel's weight in kilograms. This is mandatory for normal shipments (movement_type = DESPATCH) but must not be specified for returns shipments (movement_type = RETURN).
		/// </summary>
		/// <value>
		/// The weight.
		/// </value>
		public decimal Weight { get; set; }

		/// <summary>
		/// The packaging type for this item. Some example values are: CTN, PAL, SAT, BAG, ENV, ITM, JIF, SKI.
		/// </summary>
		/// <remarks>
		/// Note, for StarTrack products, the packaging type (refereed to as a unit type by StarTrack) is mandatory and has a maximum length of 3. 
		/// </remarks>
		/// <value>
		/// The type of the packaging.
		/// </value>
		[StringLength(3)]
		public string PackagingType { get; set; }

		/// <summary>
		/// Authority to Leave (ATL) authorisation code. If this field is provided, it must begin with C and be followed by a 9 digit number. 
		/// </summary>
		/// <value>
		/// The authority to leave number.
		/// </value>
		[StringLength(10)]
		public string AuthorityToLeaveNumber { get; set; }

		/// <summary>
		/// Whether the item contains dangerous goods, generated by the merchant.
		/// </summary>
		/// <value>
		/// The contains dangerous goods.
		/// </value>
		public bool? ContainsDangerousGoods { get; set; }

		/// <summary>
		/// Whether the item can be left in a safe place on delivery without receiving a signature. This is optional for domestic shipments (and defaults to false), but must not be specified for international shipments. 
		/// </summary>
		/// <value>
		/// The authority to leave.
		/// </value>
		public bool? AuthorityToLeave { get; set; }

		/// <summary>
		/// Whether items can be delivered to their final destination as they become available or whether all items in the resulting consignment must be delivered together.
		/// </summary>
		/// <value>
		/// The allow partial delivery.
		/// </value>
		public bool? AllowPartialDelivery { get; set; }

		// TODO: Features

		/// <summary>
		/// Loads a ItemInformation from a JSON string.
		/// </summary>
		/// <param name="json">The json.</param>
		public static ItemInformation FromJson(string json)
		{
			var serializer = new ApiSerializer();
			return serializer.FromJson<ItemInformation>(json);
		}
	}
}
